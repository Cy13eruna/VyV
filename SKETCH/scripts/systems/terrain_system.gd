class_name TerrainSystem\nextends RefCounted\n\nvar config\nvar hex_grid_ref\nvar cache_ref\n\nenum TerrainType {\n\tFIELD,\n\tFOREST,\n\tWATER,\n\tMOUNTAIN\n}\n\nfunc _init(game_config = null):\n\tconfig = game_config\n\nfunc setup_references(hex_grid, cache) -> void:\n\thex_grid_ref = hex_grid\n\tcache_ref = cache\n\nfunc is_movement_blocked(from_star_id: int, to_star_id: int) -> bool:\n\tvar terrain_type = get_terrain_between_stars(from_star_id, to_star_id)\n\treturn terrain_type == TerrainType.WATER or terrain_type == TerrainType.MOUNTAIN\n\nfunc get_terrain_between_stars(from_star_id: int, to_star_id: int) -> TerrainType:\n\tvar terrain_color = _get_terrain_color_between_stars(from_star_id, to_star_id)\n\treturn _color_to_terrain_type(terrain_color)\n\nfunc is_valid_spawn_position(star_id: int) -> bool:\n\treturn star_id >= 0\n\nfunc _get_terrain_color_between_stars(from_star_id: int, to_star_id: int) -> Color:\n\tif not hex_grid_ref or not cache_ref:\n\t\treturn Color(0.0, 1.0, 0.0, 1.0)\n\t\n\tvar diamond_colors = cache_ref.get_diamond_colors()\n\tvar connections = cache_ref.get_connections()\n\t\n\tfor i in range(connections.size()):\n\t\tvar connection = connections[i]\n\t\tif (connection.index_a == from_star_id and connection.index_b == to_star_id) or (connection.index_a == to_star_id and connection.index_b == from_star_id):\n\t\t\tif i < diamond_colors.size():\n\t\t\t\treturn diamond_colors[i]\n\t\n\treturn Color(0.0, 1.0, 0.0, 1.0)\n\nfunc _color_to_terrain_type(color: Color) -> TerrainType:\n\tvar water_color = Color(0.0, 1.0, 1.0)\n\tvar mountain_color = Color(0.4, 0.4, 0.4)\n\t\n\tif config and config.has_method(\"get_water_color\"):\n\t\twater_color = config.water_color\n\tif config and config.has_method(\"get_mountain_color\"):\n\t\tmountain_color = config.mountain_color\n\t\n\tif color.is_equal_approx(water_color):\n\t\treturn TerrainType.WATER\n\telif color.is_equal_approx(mountain_color):\n\t\treturn TerrainType.MOUNTAIN\n\telse:\n\t\treturn TerrainType.FIELD\n\nfunc get_terrain_name(terrain_type: TerrainType) -> String:\n\tmatch terrain_type:\n\t\tTerrainType.FIELD: return \"Campo\"\n\t\tTerrainType.FOREST: return \"Floresta\"\n\t\tTerrainType.WATER: return \"Agua\"\n\t\tTerrainType.MOUNTAIN: return \"Montanha\"\n\t\t_: return \"Desconhecido\"\n"